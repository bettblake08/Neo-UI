// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TextInput  renders as expected 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NewPasswordInput
    config={
      Object {
        "placeholder": "Any placeholder",
      }
    }
    name="password"
    parent={
      Object {
        "setState": [MockFunction] {
          "calls": Array [
            Array [
              [Function],
            ],
          ],
          "results": Array [
            Object {
              "isThrow": false,
              "value": undefined,
            },
          ],
        },
        "state": Object {},
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="neo-password"
        >
          <TextInput
            componentStateKey="passwordInputs"
            config={
              Object {
                "inputType": "password",
                "label": "Password",
                "placeholder": "Any placeholder",
                "testInput": [Function],
              }
            }
            defaultStatus={0}
            name="password"
            parent={
              NewPasswordInput {
                "checkPasswords": [Function],
                "context": Object {},
                "focus": [Function],
                "getValue": [Function],
                "isValid": [Function],
                "props": Object {
                  "config": Object {
                    "placeholder": "Any placeholder",
                  },
                  "name": "password",
                  "parent": Object {
                    "setState": [MockFunction] {
                      "calls": Array [
                        Array [
                          [Function],
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": undefined,
                        },
                      ],
                    },
                    "state": Object {},
                  },
                },
                "refs": Object {},
                "renderPassword": [Function],
                "setState": [Function],
                "state": Object {
                  "inputValue": "",
                  "lastChanged": 0,
                  "passwordInputs": Object {},
                },
                "testInput": [Function],
                "updater": Updater {
                  "_callbacks": Array [],
                  "_renderer": ReactShallowRenderer {
                    "_context": Object {},
                    "_didScheduleRenderPhaseUpdate": false,
                    "_dispatcher": Object {
                      "readContext": [Function],
                      "useCallback": [Function],
                      "useContext": [Function],
                      "useDebugValue": [Function],
                      "useDeferredValue": [Function],
                      "useEffect": [Function],
                      "useImperativeHandle": [Function],
                      "useLayoutEffect": [Function],
                      "useMemo": [Function],
                      "useReducer": [Function],
                      "useRef": [Function],
                      "useResponder": [Function],
                      "useState": [Function],
                      "useTransition": [Function],
                    },
                    "_element": <NewPasswordInput
                      config={
                        Object {
                          "placeholder": "Any placeholder",
                        }
                      }
                      name="password"
                      parent={
                        Object {
                          "setState": [MockFunction] {
                            "calls": Array [
                              Array [
                                [Function],
                              ],
                            ],
                            "results": Array [
                              Object {
                                "isThrow": false,
                                "value": undefined,
                              },
                            ],
                          },
                          "state": Object {},
                        }
                      }
                    />,
                    "_firstWorkInProgressHook": null,
                    "_forcedUpdate": false,
                    "_instance": [Circular],
                    "_isReRender": false,
                    "_newState": null,
                    "_numberOfReRenders": 0,
                    "_renderPhaseUpdates": null,
                    "_rendered": <div
                      className="neo-passwords"
                    >
                      <div
                        className="neo-password"
                      >
                        <TextInput
                          componentStateKey="passwordInputs"
                          config={
                            Object {
                              "inputType": "password",
                              "label": "Password",
                              "placeholder": "Any placeholder",
                              "testInput": [Function],
                            }
                          }
                          defaultStatus={0}
                          name="password"
                          parent={[Circular]}
                        />
                      </div>
                      <div
                        className="neo-password"
                      >
                        <TextInput
                          componentStateKey="passwordInputs"
                          config={
                            Object {
                              "inputType": "password",
                              "label": "Re-enter Password",
                              "placeholder": "Any placeholder",
                              "testInput": [Function],
                            }
                          }
                          defaultStatus={0}
                          name="repass"
                          parent={[Circular]}
                        />
                      </div>
                    </div>,
                    "_rendering": false,
                    "_updater": [Circular],
                    "_workInProgressHook": null,
                  },
                },
                Symbol(enzyme.__setState__): [Function],
              }
            }
          />
        </div>,
        <div
          className="neo-password"
        >
          <TextInput
            componentStateKey="passwordInputs"
            config={
              Object {
                "inputType": "password",
                "label": "Re-enter Password",
                "placeholder": "Any placeholder",
                "testInput": [Function],
              }
            }
            defaultStatus={0}
            name="repass"
            parent={
              NewPasswordInput {
                "checkPasswords": [Function],
                "context": Object {},
                "focus": [Function],
                "getValue": [Function],
                "isValid": [Function],
                "props": Object {
                  "config": Object {
                    "placeholder": "Any placeholder",
                  },
                  "name": "password",
                  "parent": Object {
                    "setState": [MockFunction] {
                      "calls": Array [
                        Array [
                          [Function],
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": undefined,
                        },
                      ],
                    },
                    "state": Object {},
                  },
                },
                "refs": Object {},
                "renderPassword": [Function],
                "setState": [Function],
                "state": Object {
                  "inputValue": "",
                  "lastChanged": 0,
                  "passwordInputs": Object {},
                },
                "testInput": [Function],
                "updater": Updater {
                  "_callbacks": Array [],
                  "_renderer": ReactShallowRenderer {
                    "_context": Object {},
                    "_didScheduleRenderPhaseUpdate": false,
                    "_dispatcher": Object {
                      "readContext": [Function],
                      "useCallback": [Function],
                      "useContext": [Function],
                      "useDebugValue": [Function],
                      "useDeferredValue": [Function],
                      "useEffect": [Function],
                      "useImperativeHandle": [Function],
                      "useLayoutEffect": [Function],
                      "useMemo": [Function],
                      "useReducer": [Function],
                      "useRef": [Function],
                      "useResponder": [Function],
                      "useState": [Function],
                      "useTransition": [Function],
                    },
                    "_element": <NewPasswordInput
                      config={
                        Object {
                          "placeholder": "Any placeholder",
                        }
                      }
                      name="password"
                      parent={
                        Object {
                          "setState": [MockFunction] {
                            "calls": Array [
                              Array [
                                [Function],
                              ],
                            ],
                            "results": Array [
                              Object {
                                "isThrow": false,
                                "value": undefined,
                              },
                            ],
                          },
                          "state": Object {},
                        }
                      }
                    />,
                    "_firstWorkInProgressHook": null,
                    "_forcedUpdate": false,
                    "_instance": [Circular],
                    "_isReRender": false,
                    "_newState": null,
                    "_numberOfReRenders": 0,
                    "_renderPhaseUpdates": null,
                    "_rendered": <div
                      className="neo-passwords"
                    >
                      <div
                        className="neo-password"
                      >
                        <TextInput
                          componentStateKey="passwordInputs"
                          config={
                            Object {
                              "inputType": "password",
                              "label": "Password",
                              "placeholder": "Any placeholder",
                              "testInput": [Function],
                            }
                          }
                          defaultStatus={0}
                          name="password"
                          parent={[Circular]}
                        />
                      </div>
                      <div
                        className="neo-password"
                      >
                        <TextInput
                          componentStateKey="passwordInputs"
                          config={
                            Object {
                              "inputType": "password",
                              "label": "Re-enter Password",
                              "placeholder": "Any placeholder",
                              "testInput": [Function],
                            }
                          }
                          defaultStatus={0}
                          name="repass"
                          parent={[Circular]}
                        />
                      </div>
                    </div>,
                    "_rendering": false,
                    "_updater": [Circular],
                    "_workInProgressHook": null,
                  },
                },
                Symbol(enzyme.__setState__): [Function],
              }
            }
          />
        </div>,
      ],
      "className": "neo-passwords",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <TextInput
            componentStateKey="passwordInputs"
            config={
              Object {
                "inputType": "password",
                "label": "Password",
                "placeholder": "Any placeholder",
                "testInput": [Function],
              }
            }
            defaultStatus={0}
            name="password"
            parent={
              NewPasswordInput {
                "checkPasswords": [Function],
                "context": Object {},
                "focus": [Function],
                "getValue": [Function],
                "isValid": [Function],
                "props": Object {
                  "config": Object {
                    "placeholder": "Any placeholder",
                  },
                  "name": "password",
                  "parent": Object {
                    "setState": [MockFunction] {
                      "calls": Array [
                        Array [
                          [Function],
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": undefined,
                        },
                      ],
                    },
                    "state": Object {},
                  },
                },
                "refs": Object {},
                "renderPassword": [Function],
                "setState": [Function],
                "state": Object {
                  "inputValue": "",
                  "lastChanged": 0,
                  "passwordInputs": Object {},
                },
                "testInput": [Function],
                "updater": Updater {
                  "_callbacks": Array [],
                  "_renderer": ReactShallowRenderer {
                    "_context": Object {},
                    "_didScheduleRenderPhaseUpdate": false,
                    "_dispatcher": Object {
                      "readContext": [Function],
                      "useCallback": [Function],
                      "useContext": [Function],
                      "useDebugValue": [Function],
                      "useDeferredValue": [Function],
                      "useEffect": [Function],
                      "useImperativeHandle": [Function],
                      "useLayoutEffect": [Function],
                      "useMemo": [Function],
                      "useReducer": [Function],
                      "useRef": [Function],
                      "useResponder": [Function],
                      "useState": [Function],
                      "useTransition": [Function],
                    },
                    "_element": <NewPasswordInput
                      config={
                        Object {
                          "placeholder": "Any placeholder",
                        }
                      }
                      name="password"
                      parent={
                        Object {
                          "setState": [MockFunction] {
                            "calls": Array [
                              Array [
                                [Function],
                              ],
                            ],
                            "results": Array [
                              Object {
                                "isThrow": false,
                                "value": undefined,
                              },
                            ],
                          },
                          "state": Object {},
                        }
                      }
                    />,
                    "_firstWorkInProgressHook": null,
                    "_forcedUpdate": false,
                    "_instance": [Circular],
                    "_isReRender": false,
                    "_newState": null,
                    "_numberOfReRenders": 0,
                    "_renderPhaseUpdates": null,
                    "_rendered": <div
                      className="neo-passwords"
                    >
                      <div
                        className="neo-password"
                      >
                        <TextInput
                          componentStateKey="passwordInputs"
                          config={
                            Object {
                              "inputType": "password",
                              "label": "Password",
                              "placeholder": "Any placeholder",
                              "testInput": [Function],
                            }
                          }
                          defaultStatus={0}
                          name="password"
                          parent={[Circular]}
                        />
                      </div>
                      <div
                        className="neo-password"
                      >
                        <TextInput
                          componentStateKey="passwordInputs"
                          config={
                            Object {
                              "inputType": "password",
                              "label": "Re-enter Password",
                              "placeholder": "Any placeholder",
                              "testInput": [Function],
                            }
                          }
                          defaultStatus={0}
                          name="repass"
                          parent={[Circular]}
                        />
                      </div>
                    </div>,
                    "_rendering": false,
                    "_updater": [Circular],
                    "_workInProgressHook": null,
                  },
                },
                Symbol(enzyme.__setState__): [Function],
              }
            }
          />,
          "className": "neo-password",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "componentStateKey": "passwordInputs",
            "config": Object {
              "inputType": "password",
              "label": "Password",
              "placeholder": "Any placeholder",
              "testInput": [Function],
            },
            "defaultStatus": 0,
            "name": "password",
            "parent": NewPasswordInput {
              "checkPasswords": [Function],
              "context": Object {},
              "focus": [Function],
              "getValue": [Function],
              "isValid": [Function],
              "props": Object {
                "config": Object {
                  "placeholder": "Any placeholder",
                },
                "name": "password",
                "parent": Object {
                  "setState": [MockFunction] {
                    "calls": Array [
                      Array [
                        [Function],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": undefined,
                      },
                    ],
                  },
                  "state": Object {},
                },
              },
              "refs": Object {},
              "renderPassword": [Function],
              "setState": [Function],
              "state": Object {
                "inputValue": "",
                "lastChanged": 0,
                "passwordInputs": Object {},
              },
              "testInput": [Function],
              "updater": Updater {
                "_callbacks": Array [],
                "_renderer": ReactShallowRenderer {
                  "_context": Object {},
                  "_didScheduleRenderPhaseUpdate": false,
                  "_dispatcher": Object {
                    "readContext": [Function],
                    "useCallback": [Function],
                    "useContext": [Function],
                    "useDebugValue": [Function],
                    "useDeferredValue": [Function],
                    "useEffect": [Function],
                    "useImperativeHandle": [Function],
                    "useLayoutEffect": [Function],
                    "useMemo": [Function],
                    "useReducer": [Function],
                    "useRef": [Function],
                    "useResponder": [Function],
                    "useState": [Function],
                    "useTransition": [Function],
                  },
                  "_element": <NewPasswordInput
                    config={
                      Object {
                        "placeholder": "Any placeholder",
                      }
                    }
                    name="password"
                    parent={
                      Object {
                        "setState": [MockFunction] {
                          "calls": Array [
                            Array [
                              [Function],
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                          ],
                        },
                        "state": Object {},
                      }
                    }
                  />,
                  "_firstWorkInProgressHook": null,
                  "_forcedUpdate": false,
                  "_instance": [Circular],
                  "_isReRender": false,
                  "_newState": null,
                  "_numberOfReRenders": 0,
                  "_renderPhaseUpdates": null,
                  "_rendered": <div
                    className="neo-passwords"
                  >
                    <div
                      className="neo-password"
                    >
                      <TextInput
                        componentStateKey="passwordInputs"
                        config={
                          Object {
                            "inputType": "password",
                            "label": "Password",
                            "placeholder": "Any placeholder",
                            "testInput": [Function],
                          }
                        }
                        defaultStatus={0}
                        name="password"
                        parent={[Circular]}
                      />
                    </div>
                    <div
                      className="neo-password"
                    >
                      <TextInput
                        componentStateKey="passwordInputs"
                        config={
                          Object {
                            "inputType": "password",
                            "label": "Re-enter Password",
                            "placeholder": "Any placeholder",
                            "testInput": [Function],
                          }
                        }
                        defaultStatus={0}
                        name="repass"
                        parent={[Circular]}
                      />
                    </div>
                  </div>,
                  "_rendering": false,
                  "_updater": [Circular],
                  "_workInProgressHook": null,
                },
              },
              Symbol(enzyme.__setState__): [Function],
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <TextInput
            componentStateKey="passwordInputs"
            config={
              Object {
                "inputType": "password",
                "label": "Re-enter Password",
                "placeholder": "Any placeholder",
                "testInput": [Function],
              }
            }
            defaultStatus={0}
            name="repass"
            parent={
              NewPasswordInput {
                "checkPasswords": [Function],
                "context": Object {},
                "focus": [Function],
                "getValue": [Function],
                "isValid": [Function],
                "props": Object {
                  "config": Object {
                    "placeholder": "Any placeholder",
                  },
                  "name": "password",
                  "parent": Object {
                    "setState": [MockFunction] {
                      "calls": Array [
                        Array [
                          [Function],
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": undefined,
                        },
                      ],
                    },
                    "state": Object {},
                  },
                },
                "refs": Object {},
                "renderPassword": [Function],
                "setState": [Function],
                "state": Object {
                  "inputValue": "",
                  "lastChanged": 0,
                  "passwordInputs": Object {},
                },
                "testInput": [Function],
                "updater": Updater {
                  "_callbacks": Array [],
                  "_renderer": ReactShallowRenderer {
                    "_context": Object {},
                    "_didScheduleRenderPhaseUpdate": false,
                    "_dispatcher": Object {
                      "readContext": [Function],
                      "useCallback": [Function],
                      "useContext": [Function],
                      "useDebugValue": [Function],
                      "useDeferredValue": [Function],
                      "useEffect": [Function],
                      "useImperativeHandle": [Function],
                      "useLayoutEffect": [Function],
                      "useMemo": [Function],
                      "useReducer": [Function],
                      "useRef": [Function],
                      "useResponder": [Function],
                      "useState": [Function],
                      "useTransition": [Function],
                    },
                    "_element": <NewPasswordInput
                      config={
                        Object {
                          "placeholder": "Any placeholder",
                        }
                      }
                      name="password"
                      parent={
                        Object {
                          "setState": [MockFunction] {
                            "calls": Array [
                              Array [
                                [Function],
                              ],
                            ],
                            "results": Array [
                              Object {
                                "isThrow": false,
                                "value": undefined,
                              },
                            ],
                          },
                          "state": Object {},
                        }
                      }
                    />,
                    "_firstWorkInProgressHook": null,
                    "_forcedUpdate": false,
                    "_instance": [Circular],
                    "_isReRender": false,
                    "_newState": null,
                    "_numberOfReRenders": 0,
                    "_renderPhaseUpdates": null,
                    "_rendered": <div
                      className="neo-passwords"
                    >
                      <div
                        className="neo-password"
                      >
                        <TextInput
                          componentStateKey="passwordInputs"
                          config={
                            Object {
                              "inputType": "password",
                              "label": "Password",
                              "placeholder": "Any placeholder",
                              "testInput": [Function],
                            }
                          }
                          defaultStatus={0}
                          name="password"
                          parent={[Circular]}
                        />
                      </div>
                      <div
                        className="neo-password"
                      >
                        <TextInput
                          componentStateKey="passwordInputs"
                          config={
                            Object {
                              "inputType": "password",
                              "label": "Re-enter Password",
                              "placeholder": "Any placeholder",
                              "testInput": [Function],
                            }
                          }
                          defaultStatus={0}
                          name="repass"
                          parent={[Circular]}
                        />
                      </div>
                    </div>,
                    "_rendering": false,
                    "_updater": [Circular],
                    "_workInProgressHook": null,
                  },
                },
                Symbol(enzyme.__setState__): [Function],
              }
            }
          />,
          "className": "neo-password",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "componentStateKey": "passwordInputs",
            "config": Object {
              "inputType": "password",
              "label": "Re-enter Password",
              "placeholder": "Any placeholder",
              "testInput": [Function],
            },
            "defaultStatus": 0,
            "name": "repass",
            "parent": NewPasswordInput {
              "checkPasswords": [Function],
              "context": Object {},
              "focus": [Function],
              "getValue": [Function],
              "isValid": [Function],
              "props": Object {
                "config": Object {
                  "placeholder": "Any placeholder",
                },
                "name": "password",
                "parent": Object {
                  "setState": [MockFunction] {
                    "calls": Array [
                      Array [
                        [Function],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": undefined,
                      },
                    ],
                  },
                  "state": Object {},
                },
              },
              "refs": Object {},
              "renderPassword": [Function],
              "setState": [Function],
              "state": Object {
                "inputValue": "",
                "lastChanged": 0,
                "passwordInputs": Object {},
              },
              "testInput": [Function],
              "updater": Updater {
                "_callbacks": Array [],
                "_renderer": ReactShallowRenderer {
                  "_context": Object {},
                  "_didScheduleRenderPhaseUpdate": false,
                  "_dispatcher": Object {
                    "readContext": [Function],
                    "useCallback": [Function],
                    "useContext": [Function],
                    "useDebugValue": [Function],
                    "useDeferredValue": [Function],
                    "useEffect": [Function],
                    "useImperativeHandle": [Function],
                    "useLayoutEffect": [Function],
                    "useMemo": [Function],
                    "useReducer": [Function],
                    "useRef": [Function],
                    "useResponder": [Function],
                    "useState": [Function],
                    "useTransition": [Function],
                  },
                  "_element": <NewPasswordInput
                    config={
                      Object {
                        "placeholder": "Any placeholder",
                      }
                    }
                    name="password"
                    parent={
                      Object {
                        "setState": [MockFunction] {
                          "calls": Array [
                            Array [
                              [Function],
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                          ],
                        },
                        "state": Object {},
                      }
                    }
                  />,
                  "_firstWorkInProgressHook": null,
                  "_forcedUpdate": false,
                  "_instance": [Circular],
                  "_isReRender": false,
                  "_newState": null,
                  "_numberOfReRenders": 0,
                  "_renderPhaseUpdates": null,
                  "_rendered": <div
                    className="neo-passwords"
                  >
                    <div
                      className="neo-password"
                    >
                      <TextInput
                        componentStateKey="passwordInputs"
                        config={
                          Object {
                            "inputType": "password",
                            "label": "Password",
                            "placeholder": "Any placeholder",
                            "testInput": [Function],
                          }
                        }
                        defaultStatus={0}
                        name="password"
                        parent={[Circular]}
                      />
                    </div>
                    <div
                      className="neo-password"
                    >
                      <TextInput
                        componentStateKey="passwordInputs"
                        config={
                          Object {
                            "inputType": "password",
                            "label": "Re-enter Password",
                            "placeholder": "Any placeholder",
                            "testInput": [Function],
                          }
                        }
                        defaultStatus={0}
                        name="repass"
                        parent={[Circular]}
                      />
                    </div>
                  </div>,
                  "_rendering": false,
                  "_updater": [Circular],
                  "_workInProgressHook": null,
                },
              },
              Symbol(enzyme.__setState__): [Function],
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="neo-password"
          >
            <TextInput
              componentStateKey="passwordInputs"
              config={
                Object {
                  "inputType": "password",
                  "label": "Password",
                  "placeholder": "Any placeholder",
                  "testInput": [Function],
                }
              }
              defaultStatus={0}
              name="password"
              parent={
                NewPasswordInput {
                  "checkPasswords": [Function],
                  "context": Object {},
                  "focus": [Function],
                  "getValue": [Function],
                  "isValid": [Function],
                  "props": Object {
                    "config": Object {
                      "placeholder": "Any placeholder",
                    },
                    "name": "password",
                    "parent": Object {
                      "setState": [MockFunction] {
                        "calls": Array [
                          Array [
                            [Function],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                        ],
                      },
                      "state": Object {},
                    },
                  },
                  "refs": Object {},
                  "renderPassword": [Function],
                  "setState": [Function],
                  "state": Object {
                    "inputValue": "",
                    "lastChanged": 0,
                    "passwordInputs": Object {},
                  },
                  "testInput": [Function],
                  "updater": Updater {
                    "_callbacks": Array [],
                    "_renderer": ReactShallowRenderer {
                      "_context": Object {},
                      "_didScheduleRenderPhaseUpdate": false,
                      "_dispatcher": Object {
                        "readContext": [Function],
                        "useCallback": [Function],
                        "useContext": [Function],
                        "useDebugValue": [Function],
                        "useDeferredValue": [Function],
                        "useEffect": [Function],
                        "useImperativeHandle": [Function],
                        "useLayoutEffect": [Function],
                        "useMemo": [Function],
                        "useReducer": [Function],
                        "useRef": [Function],
                        "useResponder": [Function],
                        "useState": [Function],
                        "useTransition": [Function],
                      },
                      "_element": <NewPasswordInput
                        config={
                          Object {
                            "placeholder": "Any placeholder",
                          }
                        }
                        name="password"
                        parent={
                          Object {
                            "setState": [MockFunction] {
                              "calls": Array [
                                Array [
                                  [Function],
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "isThrow": false,
                                  "value": undefined,
                                },
                              ],
                            },
                            "state": Object {},
                          }
                        }
                      />,
                      "_firstWorkInProgressHook": null,
                      "_forcedUpdate": false,
                      "_instance": [Circular],
                      "_isReRender": false,
                      "_newState": null,
                      "_numberOfReRenders": 0,
                      "_renderPhaseUpdates": null,
                      "_rendered": <div
                        className="neo-passwords"
                      >
                        <div
                          className="neo-password"
                        >
                          <TextInput
                            componentStateKey="passwordInputs"
                            config={
                              Object {
                                "inputType": "password",
                                "label": "Password",
                                "placeholder": "Any placeholder",
                                "testInput": [Function],
                              }
                            }
                            defaultStatus={0}
                            name="password"
                            parent={[Circular]}
                          />
                        </div>
                        <div
                          className="neo-password"
                        >
                          <TextInput
                            componentStateKey="passwordInputs"
                            config={
                              Object {
                                "inputType": "password",
                                "label": "Re-enter Password",
                                "placeholder": "Any placeholder",
                                "testInput": [Function],
                              }
                            }
                            defaultStatus={0}
                            name="repass"
                            parent={[Circular]}
                          />
                        </div>
                      </div>,
                      "_rendering": false,
                      "_updater": [Circular],
                      "_workInProgressHook": null,
                    },
                  },
                  Symbol(enzyme.__setState__): [Function],
                }
              }
            />
          </div>,
          <div
            className="neo-password"
          >
            <TextInput
              componentStateKey="passwordInputs"
              config={
                Object {
                  "inputType": "password",
                  "label": "Re-enter Password",
                  "placeholder": "Any placeholder",
                  "testInput": [Function],
                }
              }
              defaultStatus={0}
              name="repass"
              parent={
                NewPasswordInput {
                  "checkPasswords": [Function],
                  "context": Object {},
                  "focus": [Function],
                  "getValue": [Function],
                  "isValid": [Function],
                  "props": Object {
                    "config": Object {
                      "placeholder": "Any placeholder",
                    },
                    "name": "password",
                    "parent": Object {
                      "setState": [MockFunction] {
                        "calls": Array [
                          Array [
                            [Function],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                        ],
                      },
                      "state": Object {},
                    },
                  },
                  "refs": Object {},
                  "renderPassword": [Function],
                  "setState": [Function],
                  "state": Object {
                    "inputValue": "",
                    "lastChanged": 0,
                    "passwordInputs": Object {},
                  },
                  "testInput": [Function],
                  "updater": Updater {
                    "_callbacks": Array [],
                    "_renderer": ReactShallowRenderer {
                      "_context": Object {},
                      "_didScheduleRenderPhaseUpdate": false,
                      "_dispatcher": Object {
                        "readContext": [Function],
                        "useCallback": [Function],
                        "useContext": [Function],
                        "useDebugValue": [Function],
                        "useDeferredValue": [Function],
                        "useEffect": [Function],
                        "useImperativeHandle": [Function],
                        "useLayoutEffect": [Function],
                        "useMemo": [Function],
                        "useReducer": [Function],
                        "useRef": [Function],
                        "useResponder": [Function],
                        "useState": [Function],
                        "useTransition": [Function],
                      },
                      "_element": <NewPasswordInput
                        config={
                          Object {
                            "placeholder": "Any placeholder",
                          }
                        }
                        name="password"
                        parent={
                          Object {
                            "setState": [MockFunction] {
                              "calls": Array [
                                Array [
                                  [Function],
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "isThrow": false,
                                  "value": undefined,
                                },
                              ],
                            },
                            "state": Object {},
                          }
                        }
                      />,
                      "_firstWorkInProgressHook": null,
                      "_forcedUpdate": false,
                      "_instance": [Circular],
                      "_isReRender": false,
                      "_newState": null,
                      "_numberOfReRenders": 0,
                      "_renderPhaseUpdates": null,
                      "_rendered": <div
                        className="neo-passwords"
                      >
                        <div
                          className="neo-password"
                        >
                          <TextInput
                            componentStateKey="passwordInputs"
                            config={
                              Object {
                                "inputType": "password",
                                "label": "Password",
                                "placeholder": "Any placeholder",
                                "testInput": [Function],
                              }
                            }
                            defaultStatus={0}
                            name="password"
                            parent={[Circular]}
                          />
                        </div>
                        <div
                          className="neo-password"
                        >
                          <TextInput
                            componentStateKey="passwordInputs"
                            config={
                              Object {
                                "inputType": "password",
                                "label": "Re-enter Password",
                                "placeholder": "Any placeholder",
                                "testInput": [Function],
                              }
                            }
                            defaultStatus={0}
                            name="repass"
                            parent={[Circular]}
                          />
                        </div>
                      </div>,
                      "_rendering": false,
                      "_updater": [Circular],
                      "_workInProgressHook": null,
                    },
                  },
                  Symbol(enzyme.__setState__): [Function],
                }
              }
            />
          </div>,
        ],
        "className": "neo-passwords",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <TextInput
              componentStateKey="passwordInputs"
              config={
                Object {
                  "inputType": "password",
                  "label": "Password",
                  "placeholder": "Any placeholder",
                  "testInput": [Function],
                }
              }
              defaultStatus={0}
              name="password"
              parent={
                NewPasswordInput {
                  "checkPasswords": [Function],
                  "context": Object {},
                  "focus": [Function],
                  "getValue": [Function],
                  "isValid": [Function],
                  "props": Object {
                    "config": Object {
                      "placeholder": "Any placeholder",
                    },
                    "name": "password",
                    "parent": Object {
                      "setState": [MockFunction] {
                        "calls": Array [
                          Array [
                            [Function],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                        ],
                      },
                      "state": Object {},
                    },
                  },
                  "refs": Object {},
                  "renderPassword": [Function],
                  "setState": [Function],
                  "state": Object {
                    "inputValue": "",
                    "lastChanged": 0,
                    "passwordInputs": Object {},
                  },
                  "testInput": [Function],
                  "updater": Updater {
                    "_callbacks": Array [],
                    "_renderer": ReactShallowRenderer {
                      "_context": Object {},
                      "_didScheduleRenderPhaseUpdate": false,
                      "_dispatcher": Object {
                        "readContext": [Function],
                        "useCallback": [Function],
                        "useContext": [Function],
                        "useDebugValue": [Function],
                        "useDeferredValue": [Function],
                        "useEffect": [Function],
                        "useImperativeHandle": [Function],
                        "useLayoutEffect": [Function],
                        "useMemo": [Function],
                        "useReducer": [Function],
                        "useRef": [Function],
                        "useResponder": [Function],
                        "useState": [Function],
                        "useTransition": [Function],
                      },
                      "_element": <NewPasswordInput
                        config={
                          Object {
                            "placeholder": "Any placeholder",
                          }
                        }
                        name="password"
                        parent={
                          Object {
                            "setState": [MockFunction] {
                              "calls": Array [
                                Array [
                                  [Function],
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "isThrow": false,
                                  "value": undefined,
                                },
                              ],
                            },
                            "state": Object {},
                          }
                        }
                      />,
                      "_firstWorkInProgressHook": null,
                      "_forcedUpdate": false,
                      "_instance": [Circular],
                      "_isReRender": false,
                      "_newState": null,
                      "_numberOfReRenders": 0,
                      "_renderPhaseUpdates": null,
                      "_rendered": <div
                        className="neo-passwords"
                      >
                        <div
                          className="neo-password"
                        >
                          <TextInput
                            componentStateKey="passwordInputs"
                            config={
                              Object {
                                "inputType": "password",
                                "label": "Password",
                                "placeholder": "Any placeholder",
                                "testInput": [Function],
                              }
                            }
                            defaultStatus={0}
                            name="password"
                            parent={[Circular]}
                          />
                        </div>
                        <div
                          className="neo-password"
                        >
                          <TextInput
                            componentStateKey="passwordInputs"
                            config={
                              Object {
                                "inputType": "password",
                                "label": "Re-enter Password",
                                "placeholder": "Any placeholder",
                                "testInput": [Function],
                              }
                            }
                            defaultStatus={0}
                            name="repass"
                            parent={[Circular]}
                          />
                        </div>
                      </div>,
                      "_rendering": false,
                      "_updater": [Circular],
                      "_workInProgressHook": null,
                    },
                  },
                  Symbol(enzyme.__setState__): [Function],
                }
              }
            />,
            "className": "neo-password",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "componentStateKey": "passwordInputs",
              "config": Object {
                "inputType": "password",
                "label": "Password",
                "placeholder": "Any placeholder",
                "testInput": [Function],
              },
              "defaultStatus": 0,
              "name": "password",
              "parent": NewPasswordInput {
                "checkPasswords": [Function],
                "context": Object {},
                "focus": [Function],
                "getValue": [Function],
                "isValid": [Function],
                "props": Object {
                  "config": Object {
                    "placeholder": "Any placeholder",
                  },
                  "name": "password",
                  "parent": Object {
                    "setState": [MockFunction] {
                      "calls": Array [
                        Array [
                          [Function],
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": undefined,
                        },
                      ],
                    },
                    "state": Object {},
                  },
                },
                "refs": Object {},
                "renderPassword": [Function],
                "setState": [Function],
                "state": Object {
                  "inputValue": "",
                  "lastChanged": 0,
                  "passwordInputs": Object {},
                },
                "testInput": [Function],
                "updater": Updater {
                  "_callbacks": Array [],
                  "_renderer": ReactShallowRenderer {
                    "_context": Object {},
                    "_didScheduleRenderPhaseUpdate": false,
                    "_dispatcher": Object {
                      "readContext": [Function],
                      "useCallback": [Function],
                      "useContext": [Function],
                      "useDebugValue": [Function],
                      "useDeferredValue": [Function],
                      "useEffect": [Function],
                      "useImperativeHandle": [Function],
                      "useLayoutEffect": [Function],
                      "useMemo": [Function],
                      "useReducer": [Function],
                      "useRef": [Function],
                      "useResponder": [Function],
                      "useState": [Function],
                      "useTransition": [Function],
                    },
                    "_element": <NewPasswordInput
                      config={
                        Object {
                          "placeholder": "Any placeholder",
                        }
                      }
                      name="password"
                      parent={
                        Object {
                          "setState": [MockFunction] {
                            "calls": Array [
                              Array [
                                [Function],
                              ],
                            ],
                            "results": Array [
                              Object {
                                "isThrow": false,
                                "value": undefined,
                              },
                            ],
                          },
                          "state": Object {},
                        }
                      }
                    />,
                    "_firstWorkInProgressHook": null,
                    "_forcedUpdate": false,
                    "_instance": [Circular],
                    "_isReRender": false,
                    "_newState": null,
                    "_numberOfReRenders": 0,
                    "_renderPhaseUpdates": null,
                    "_rendered": <div
                      className="neo-passwords"
                    >
                      <div
                        className="neo-password"
                      >
                        <TextInput
                          componentStateKey="passwordInputs"
                          config={
                            Object {
                              "inputType": "password",
                              "label": "Password",
                              "placeholder": "Any placeholder",
                              "testInput": [Function],
                            }
                          }
                          defaultStatus={0}
                          name="password"
                          parent={[Circular]}
                        />
                      </div>
                      <div
                        className="neo-password"
                      >
                        <TextInput
                          componentStateKey="passwordInputs"
                          config={
                            Object {
                              "inputType": "password",
                              "label": "Re-enter Password",
                              "placeholder": "Any placeholder",
                              "testInput": [Function],
                            }
                          }
                          defaultStatus={0}
                          name="repass"
                          parent={[Circular]}
                        />
                      </div>
                    </div>,
                    "_rendering": false,
                    "_updater": [Circular],
                    "_workInProgressHook": null,
                  },
                },
                Symbol(enzyme.__setState__): [Function],
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <TextInput
              componentStateKey="passwordInputs"
              config={
                Object {
                  "inputType": "password",
                  "label": "Re-enter Password",
                  "placeholder": "Any placeholder",
                  "testInput": [Function],
                }
              }
              defaultStatus={0}
              name="repass"
              parent={
                NewPasswordInput {
                  "checkPasswords": [Function],
                  "context": Object {},
                  "focus": [Function],
                  "getValue": [Function],
                  "isValid": [Function],
                  "props": Object {
                    "config": Object {
                      "placeholder": "Any placeholder",
                    },
                    "name": "password",
                    "parent": Object {
                      "setState": [MockFunction] {
                        "calls": Array [
                          Array [
                            [Function],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                        ],
                      },
                      "state": Object {},
                    },
                  },
                  "refs": Object {},
                  "renderPassword": [Function],
                  "setState": [Function],
                  "state": Object {
                    "inputValue": "",
                    "lastChanged": 0,
                    "passwordInputs": Object {},
                  },
                  "testInput": [Function],
                  "updater": Updater {
                    "_callbacks": Array [],
                    "_renderer": ReactShallowRenderer {
                      "_context": Object {},
                      "_didScheduleRenderPhaseUpdate": false,
                      "_dispatcher": Object {
                        "readContext": [Function],
                        "useCallback": [Function],
                        "useContext": [Function],
                        "useDebugValue": [Function],
                        "useDeferredValue": [Function],
                        "useEffect": [Function],
                        "useImperativeHandle": [Function],
                        "useLayoutEffect": [Function],
                        "useMemo": [Function],
                        "useReducer": [Function],
                        "useRef": [Function],
                        "useResponder": [Function],
                        "useState": [Function],
                        "useTransition": [Function],
                      },
                      "_element": <NewPasswordInput
                        config={
                          Object {
                            "placeholder": "Any placeholder",
                          }
                        }
                        name="password"
                        parent={
                          Object {
                            "setState": [MockFunction] {
                              "calls": Array [
                                Array [
                                  [Function],
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "isThrow": false,
                                  "value": undefined,
                                },
                              ],
                            },
                            "state": Object {},
                          }
                        }
                      />,
                      "_firstWorkInProgressHook": null,
                      "_forcedUpdate": false,
                      "_instance": [Circular],
                      "_isReRender": false,
                      "_newState": null,
                      "_numberOfReRenders": 0,
                      "_renderPhaseUpdates": null,
                      "_rendered": <div
                        className="neo-passwords"
                      >
                        <div
                          className="neo-password"
                        >
                          <TextInput
                            componentStateKey="passwordInputs"
                            config={
                              Object {
                                "inputType": "password",
                                "label": "Password",
                                "placeholder": "Any placeholder",
                                "testInput": [Function],
                              }
                            }
                            defaultStatus={0}
                            name="password"
                            parent={[Circular]}
                          />
                        </div>
                        <div
                          className="neo-password"
                        >
                          <TextInput
                            componentStateKey="passwordInputs"
                            config={
                              Object {
                                "inputType": "password",
                                "label": "Re-enter Password",
                                "placeholder": "Any placeholder",
                                "testInput": [Function],
                              }
                            }
                            defaultStatus={0}
                            name="repass"
                            parent={[Circular]}
                          />
                        </div>
                      </div>,
                      "_rendering": false,
                      "_updater": [Circular],
                      "_workInProgressHook": null,
                    },
                  },
                  Symbol(enzyme.__setState__): [Function],
                }
              }
            />,
            "className": "neo-password",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "componentStateKey": "passwordInputs",
              "config": Object {
                "inputType": "password",
                "label": "Re-enter Password",
                "placeholder": "Any placeholder",
                "testInput": [Function],
              },
              "defaultStatus": 0,
              "name": "repass",
              "parent": NewPasswordInput {
                "checkPasswords": [Function],
                "context": Object {},
                "focus": [Function],
                "getValue": [Function],
                "isValid": [Function],
                "props": Object {
                  "config": Object {
                    "placeholder": "Any placeholder",
                  },
                  "name": "password",
                  "parent": Object {
                    "setState": [MockFunction] {
                      "calls": Array [
                        Array [
                          [Function],
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": undefined,
                        },
                      ],
                    },
                    "state": Object {},
                  },
                },
                "refs": Object {},
                "renderPassword": [Function],
                "setState": [Function],
                "state": Object {
                  "inputValue": "",
                  "lastChanged": 0,
                  "passwordInputs": Object {},
                },
                "testInput": [Function],
                "updater": Updater {
                  "_callbacks": Array [],
                  "_renderer": ReactShallowRenderer {
                    "_context": Object {},
                    "_didScheduleRenderPhaseUpdate": false,
                    "_dispatcher": Object {
                      "readContext": [Function],
                      "useCallback": [Function],
                      "useContext": [Function],
                      "useDebugValue": [Function],
                      "useDeferredValue": [Function],
                      "useEffect": [Function],
                      "useImperativeHandle": [Function],
                      "useLayoutEffect": [Function],
                      "useMemo": [Function],
                      "useReducer": [Function],
                      "useRef": [Function],
                      "useResponder": [Function],
                      "useState": [Function],
                      "useTransition": [Function],
                    },
                    "_element": <NewPasswordInput
                      config={
                        Object {
                          "placeholder": "Any placeholder",
                        }
                      }
                      name="password"
                      parent={
                        Object {
                          "setState": [MockFunction] {
                            "calls": Array [
                              Array [
                                [Function],
                              ],
                            ],
                            "results": Array [
                              Object {
                                "isThrow": false,
                                "value": undefined,
                              },
                            ],
                          },
                          "state": Object {},
                        }
                      }
                    />,
                    "_firstWorkInProgressHook": null,
                    "_forcedUpdate": false,
                    "_instance": [Circular],
                    "_isReRender": false,
                    "_newState": null,
                    "_numberOfReRenders": 0,
                    "_renderPhaseUpdates": null,
                    "_rendered": <div
                      className="neo-passwords"
                    >
                      <div
                        className="neo-password"
                      >
                        <TextInput
                          componentStateKey="passwordInputs"
                          config={
                            Object {
                              "inputType": "password",
                              "label": "Password",
                              "placeholder": "Any placeholder",
                              "testInput": [Function],
                            }
                          }
                          defaultStatus={0}
                          name="password"
                          parent={[Circular]}
                        />
                      </div>
                      <div
                        className="neo-password"
                      >
                        <TextInput
                          componentStateKey="passwordInputs"
                          config={
                            Object {
                              "inputType": "password",
                              "label": "Re-enter Password",
                              "placeholder": "Any placeholder",
                              "testInput": [Function],
                            }
                          }
                          defaultStatus={0}
                          name="repass"
                          parent={[Circular]}
                        />
                      </div>
                    </div>,
                    "_rendering": false,
                    "_updater": [Circular],
                    "_workInProgressHook": null,
                  },
                },
                Symbol(enzyme.__setState__): [Function],
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
